type Person {
    name: String!
    interests: [Topic] @relation(name: "INTERESTED_IN", direction: "OUT")
    conversationPartner: [Person] @cypher(statement: "MATCH (this)-[:INTERESTED_IN]->(:Topic)<-[:INTERESTED_IN]-(p:Person) RETURN DISTINCT p")
}

type Topic {
    name: String!
    interestingTo: [Person] @relation(name: "INTERESTED_IN", direction: "IN")
    inCommonWith: [Topic] @cypher(statement: "MATCH (this)<-[:INTERESTED_IN]-(:Person)-[:INTERESTED_IN]->(t:Topic) RETURN DISTINCT t")
}

type Query {
    peopleBySubstring(substring:String!): [Person] @cypher(statement: "MATCH (p:Person) where p.name CONTAINS $substring RETURN p")
    searchNodes: [Result]
}

union Result = Person | Topic